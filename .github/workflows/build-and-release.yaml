name: Build and Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            make_cmd: make
            artifact_name: release-linux.tar.gz
          - os: windows-latest
            make_cmd: mingw32-make
            artifact_name: release-windows.zip

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up build environment (Unix)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential

      - name: Set up build environment (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install make
          choco install mingw

      - name: Build project
        run: ${{ matrix.make_cmd }}

      - name: Archive build artifacts (Unix)
        if: runner.os == 'Linux'
        run: tar -czvf ${{ matrix.artifact_name }} ./build/release/

      - name: Archive build artifacts (Windows)
        if: runner.os == 'Windows'
        run: Compress-Archive -Path ./build/release/* -DestinationPath ${{ matrix.artifact_name }}

      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-artifact
          path: ${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts (Linux)
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest-artifact
          path: linux

      - name: Download build artifacts (Windows)
        uses: actions/download-artifact@v3
        with:
          name: windows-latest-artifact
          path: windows

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release of the build for Linux and Windows.
          draft: false
          prerelease: false

      - name: Upload Linux release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/${{ matrix.artifact_name }}
          asset_name: release-linux.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/${{ matrix.artifact_name }}
          asset_name: release-windows.zip
          asset_content_type: application/zip
